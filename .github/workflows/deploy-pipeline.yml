name: Deploy Infrastructure

on:
  push:
#    branches:
#      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  TF_LOG: "INFO" # "DEBUG"

jobs:
  deploy_terraform_aws:
    name: deploy_terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Terraform Format
        id: fmt
        run: terraform -chdir="./infra" fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform -chdir="./infra" init -input=false

      - name: Terraform Validate
        id: validate
        run: terraform -chdir="./infra" validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform -chdir="./infra" plan -out=tfplan -no-color -input=false
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: terraform -chdir="./infra" apply -input=false -auto-approve

#      - name: Sync S3
#        uses: jakejarvis/s3-sync-action@master
#        env:
#          SOURCE_DIR: './lambda'
#          AWS_REGION: 'us-east-1'
#          AWS_S3_BUCKET: 'terraform-state-backend-postech'

  deploy_source:
    name: build and deploy lambda
    strategy:
      matrix:
        node-version: [ 12.x ]
    runs-on: ubuntu-latest
    needs: deploy_terraform_aws
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and build
        run: |
          npm ci
          npm run build --if-present
        env:
          CI: true
      - name: zip
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./hello.zip ./
      - name: default deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: eu-west-1
          function_name: postech-lambda-auth-fastfood
          zip_file: hello.zip